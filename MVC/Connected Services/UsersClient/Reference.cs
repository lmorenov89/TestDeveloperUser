//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.UsersClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserVM", Namespace="http://schemas.datacontract.org/2004/07/WCF.ViewModels")]
    [System.SerializableAttribute()]
    public partial class UserVM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UsersClient.IUser")]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/All", ReplyAction="http://tempuri.org/IUser/AllResponse")]
        MVC.UsersClient.UserVM[] All();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/All", ReplyAction="http://tempuri.org/IUser/AllResponse")]
        System.Threading.Tasks.Task<MVC.UsersClient.UserVM[]> AllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Show", ReplyAction="http://tempuri.org/IUser/ShowResponse")]
        MVC.UsersClient.UserVM Show(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Show", ReplyAction="http://tempuri.org/IUser/ShowResponse")]
        System.Threading.Tasks.Task<MVC.UsersClient.UserVM> ShowAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Insert", ReplyAction="http://tempuri.org/IUser/InsertResponse")]
        bool Insert(MVC.UsersClient.UserVM item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Insert", ReplyAction="http://tempuri.org/IUser/InsertResponse")]
        System.Threading.Tasks.Task<bool> InsertAsync(MVC.UsersClient.UserVM item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Update", ReplyAction="http://tempuri.org/IUser/UpdateResponse")]
        bool Update(int id, MVC.UsersClient.UserVM item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Update", ReplyAction="http://tempuri.org/IUser/UpdateResponse")]
        System.Threading.Tasks.Task<bool> UpdateAsync(int id, MVC.UsersClient.UserVM item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Delete", ReplyAction="http://tempuri.org/IUser/DeleteResponse")]
        bool Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Delete", ReplyAction="http://tempuri.org/IUser/DeleteResponse")]
        System.Threading.Tasks.Task<bool> DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : MVC.UsersClient.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.ClientBase<MVC.UsersClient.IUser>, MVC.UsersClient.IUser {
        
        public UserClient() {
        }
        
        public UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVC.UsersClient.UserVM[] All() {
            return base.Channel.All();
        }
        
        public System.Threading.Tasks.Task<MVC.UsersClient.UserVM[]> AllAsync() {
            return base.Channel.AllAsync();
        }
        
        public MVC.UsersClient.UserVM Show(int id) {
            return base.Channel.Show(id);
        }
        
        public System.Threading.Tasks.Task<MVC.UsersClient.UserVM> ShowAsync(int id) {
            return base.Channel.ShowAsync(id);
        }
        
        public bool Insert(MVC.UsersClient.UserVM item) {
            return base.Channel.Insert(item);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAsync(MVC.UsersClient.UserVM item) {
            return base.Channel.InsertAsync(item);
        }
        
        public bool Update(int id, MVC.UsersClient.UserVM item) {
            return base.Channel.Update(id, item);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAsync(int id, MVC.UsersClient.UserVM item) {
            return base.Channel.UpdateAsync(id, item);
        }
        
        public bool Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
